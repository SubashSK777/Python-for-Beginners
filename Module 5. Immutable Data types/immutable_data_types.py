# -*- coding: utf-8 -*-
"""Immutable Data types

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BvWd_G8JbB3SpHyImoytqLkUxe5t3U9S

# Data Types in Python   (Mutable &  Immutable)
In Python, data types can be categorized as mutable and immutable based on whether their values can be changed after they are created.
Mutable
Immutable

**1. Mutable**
Definition: Mutable data types allow modifications after their creation. You can change, add, or remove elements without creating a new object.
Examples: Lists, Dictionaries, Sets.

**2. Immutable**
Definition: Immutable data types do not allow any modifications after their creation. If you attempt to change them, you need to create a new object.
Examples: Strings, Tuples, Integers

# **Immutable Data Types**

# 1. Tuple - A tuple is an ordered, immutable collection of items. Once created, the items in a tuple cannot be changed.
"""

# Creating a tuple
thistuple = ("apple", "banana", "cherry")
print(thistuple)  # Output: ('apple', 'banana', 'cherry')

# Accessing items by index
thistuple = ("apple", "banana", "cherry")
print(thistuple[1])  # Output: banana

# Tuples are immutable, so you cannot change their values once created
thistuple = ("apple", "banana", "cherry")
# Uncommenting the next line will raise an error
# thistuple[1] = "blackcurrant"  # TypeError: 'tuple' object does not support item assignment

# Using len() to determine the number of items in a tuple
thistuple = ("apple", "banana", "cherry")
print(len(thistuple))  # Output: 3

# Tuples are immutable, so you cannot add items once created
thistuple = ("apple", "banana", "cherry")
# Uncommenting the next line will raise an error
# thistuple[3] = "orange"  # TypeError: 'tuple' object does not support item assignment

# Tuples are immutable, so you cannot remove items, but you can delete the entire tuple
thistuple = ("apple", "banana", "cherry")
del thistuple
# Uncommenting the next line will raise an error because the tuple no longer exists
# print(thistuple)  # NameError: name 'thistuple' is not defined

"""# **2. STRING**

**A string is an immutable sequence of characters. Once created, the characters in a string cannot be changed.**
"""

# Creating a string
a = "Hello World!!"
print(a)            # Output: Hello World!!
print(type(a))      # Output: <class 'str'>

# Using the find() method to find the first occurrence of a substring
a = "Hello World!"
print(a.find("e"))        # Output: 1

# Using the lower() method to convert the string to lowercase
a = "Hello World !"
print(a.lower())  # Output: hello world !

# Using the upper() method to convert the string to uppercase
a = "Hello World !"
print(a.upper())  # Output: HELLO WORLD !

# Using the len() method to get the length of the string
a = "Hello World !"
print(len(a))     # Output: 13

# Using the replace() method to replace a substring with another substring
a = "Hello World !"
print(a.replace("H", "J"))  # Output: Jello World !

"""**3. NUMERIC**

1. Integer
2.float
3.complex


"""

x = 1    # int
y = 2.8  # float
z = 1j   # complex

print(type(x))  # Output: <class 'int'>
print(type(y))  # Output: <class 'float'>
print(type(z))  # Output: <class 'complex'>

