# -*- coding: utf-8 -*-
"""def function .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DMVUfLkqA25J-qG7YYDJNEv1vLZ1ANEu

# Definition of def Function in Python:

In Python, a function is a block of reusable code that is used to perform a specific task. Functions help organize and manage code efficiently, especially when certain tasks need to be executed multiple times in a program. The keyword def is used to define a function.

The general syntax for defining a function is:
"""

def function_name(parameters):
    """
    Optional docstring to describe what the function does.
    """
    # Code block of the function
    return result  # Optional return statement

"""# Why Do We Use the def Function in Python?


# 1. Code Reusability:

One of the main reasons to use functions is reusability. Instead of writing the same code multiple times, you can define a function once and call it whenever needed.

Example:
"""

def greet(name):
    print(f"Hello, {name}!")

greet("Alice")
greet("Bob")
# You can call the greet function multiple times with different names

"""# 2. Modularity:

Functions help break down a complex problem into smaller, manageable pieces. Each function can handle a specific task, making the program easier to understand and maintain.

Example:
"""

def calculate_area(length, width):
    return length * width

area = calculate_area(5, 3)
print(f"Area: {area}")

"""# 3. Avoid Repetition:

Instead of writing repetitive code, functions allow you to execute the same code with different inputs.

Example:
"""

def add_numbers(a, b):
    return a + b

print(add_numbers(5, 10))
print(add_numbers(3, 7))

"""# 4. Clarity and Organization:

 Using functions allows your code to be more organized and readable. Each function serves a single purpose, making it easier to understand what each part of the code is doing.

# 5. Scalability:

 As projects grow larger, managing the code becomes more complex. By organizing code into functions, it's easier to scale and make changes without affecting other parts of the program.
"""